{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Reibot","tagline":"A mIRC based IRC channel bot for role playing and more!","google":"","body":"ReiBot for mIRC 7.x\r\n===================\r\n\r\nReiBot is a mIRC-based IRC bot (but more accurately, a collection of scripts which, when combined, has bot-like behavior). Since mIRC provides a robust event handling system for everything from messages to socket connections, as well as a powerful scripting language, it is ideal for writing an automated IRC bot.\r\n\r\nCurrent Features\r\n----------------\r\n\r\n* A definitions system\r\n\r\nA method to retrieve information based on triggers. For instance, if you want to save your channel rules to recall later, the conversation would look like:\r\n\r\n    <You> !learn Rules Don't whiz on the electric fence!\r\n    <ReiBot> *Profile Stored*\r\n    <You> ?? Rules\r\n    <ReiBot> Don't whiz on the electric fence!\r\n\r\nReiBot was originally written to store character profiles for a role playing channel - hence why the word Profile is used; but don't let this stop you from using it for whatever you want!\r\n\r\nThere is also a script included which can import definitions from Icel, an Eggdrop TCL script with a similar definitions system.\r\n\r\nReiBot uses mIRC's INI handler to manage the definitions file - We've tested it with more than 500 profiles and the system remains responsive. The format looks like:\r\n\r\n    [Profile Name]\r\n    1=First Line of the profile\r\n    2=Second line of the profile.. and so on\r\n    WhoSet=Nickname of who did the !learn\r\n    SetTime=Last updated datestamp in long format\r\n\r\n\r\nPlanned Features\r\n----------------\r\n\r\nReiBot is in active use by me, and therefore active development. Here's what's on my radar.\r\n\r\nPriority 1 is probably going to be in the next release. Priority 5 will be done in my copious free time :)\r\n\r\n* A public commands system (Priority: 1)\r\n\r\nFor channel management, etc. If you can do it with private messages to ChanServ, you'll be able to do it in channel with a simple trigger. This system is going to be coded around Anope services intially (as that's what my home IRC network uses), but I hope to make it compatible with most services backends out there.\r\n\r\n* Remote Access (Priority: 3)\r\n\r\nRemotely access files and perform actions on the host system.\r\n\r\n* Markov-chain chatterbot (Priority: 5)\r\n\r\n* Note system (Priority: 2)\r\n\r\n* Channel Games (Priority: 5)\r\n\r\nInstalling\r\n----------\r\n\r\n1.  Make a fresh install of mIRC version 7 or greater. I suggest using c:\\Reibot, but anything will work.\r\n2.  Clone this repository into the mIRC folder.\r\n3.  Change your mIRC options as you see fit\r\n4.  **(Important!)** Edit the aliases file to change the bot's master control password! "}